Contribution: Both members contributed equally.

Github repository link: https://github.com/Shaurya22475/OS-assignments

Lines 1-11:
We begin our code by including necessary standard C libraries and system headers. We define some constants for our shell, specifying the maximum history size and the maximum command length that our shell can handle.

Lines 12-25:
We define a CommandHistory struct to store details about executed commands, including command number, command text, start time, end time, duration, and whether they were run in the background. Also initializes an array to store command history.

Lines 26-40:
In this section, we implement the printHistory function, which allows us to iterate through the command history and print the details of each executed command.

Lines 41-56:
Our addToHistory function is responsible for adding a command and its associated information to the command history, as long as there is space. It calculates the duration of command execution and handles potential memory allocation errors.

Lines 57-146:
We've implemented the launch function to execute commands and handle pipes if they are present. It can manage commands with pipes by creating child processes for each command in the pipeline and connecting them with pipes. Additionally, we measure the start and end times of command execution using clock_gettime.

Lines 153-197:
The main function serves as the entry point of our program.
Within a loop, we continuously prompt the user for commands.
User input is read into the command variable.
We parse and execute the user's commands using the launch function.
Executed commands are added to the command history using addToHistory.

Limitations: 
1.The shell cannot run the cd command as there is no executable file for the cd command in the linux system. cd is a Built in command which is handled internally by the linux shell. We cannot get the executable and pass it to the execvp in our SimpleShell hence this command does not work.
